input[type="button"]:not(:disabled),
input[type="submit"]:not(:disabled),
input[type="reset"]:not(:disabled),
button:not(:disabled){
    &.button{
        padding: 1rem;
        margin: .5rem;
        position: relative;
        min-height: 4rem;
        min-width: 8rem;
        font-weight: bold;
        color: inherit;
        background: inherit;
        font-size: 1rem;
        border-color: #41353520 !important;
        border: 0;
        border-radius: 1rem;
        transition: box-shadow .05s ease, background-position .2s ease;
        box-shadow: 10px 10px 20px #00000015, -10px -10px 20px #ffffff92;
        cursor: pointer;
        &.button-round{
            padding: 1rem 0 1rem 0;
            text-align: center;
            content: '';
            min-height: 4rem;
            min-width: 4rem;
            max-height: 4rem;
            max-width: 4rem;
            border-radius: 50%;
        }
        &.hover--down{
            background: linear-gradient(to bottom, transparent 50%, #33333320 50%);
            background-size: 100% 200%;
            background-position: left bottom;
            &:hover{
                background-position: right top;
            }
        }
        &.hover--up{
            background: linear-gradient(to bottom, transparent 50%, #33333320 50%);
            background-size: 100% 200%;
            background-position: left top;
            &:hover{
                background-position: right bottom;
            }
        }
        &.hover--font{
            &:hover{
                color: black;
            }
        }
        &.button-outline{
            border: .1rem solid;
            border-color: #00000020;
        }
        &.button-push:focus{
            outline: 0;
        }
        &.button-bump:focus{
            outline: 0;
        }
    }
    
}

input[type="button"]:disabled,
input[type="submit"]:disabled,
input[type="reset"]:disabled,
button:disabled{
    padding: 1rem;
    margin: .5rem;
    position: relative;
    min-height: 4rem;
    min-width: 8rem;
    font-weight: bold;
    color: inherit;
    font-size: 1rem;
    border: 0;
    border-radius: 1rem;
    box-shadow: none;
    background: #00000020;
    border-color: #41353520 !important;
    cursor: auto;
}
// mixin for generating button shadows
@mixin set_button_styling($map, $keys){
    input[type="button"]:not(:disabled),
    input[type="submit"]:not(:disabled),
    input[type="reset"]:not(:disabled),
    button:not(:disabled){
        @each $keymap, $valuemap in $map{
            &.button-#{$keymap}{
                content: '';
                @each $key in $keys{
                    @if $key == box-shadow {
                        #{$key}: 10px 10px 20px map-get(map-get($valuemap, $key), darker), -10px -10px 20px map-get(map-get($valuemap, $key), lighter);
                        // &.colored{
                        //     #{$key}: 10px 10px 20px map-get(map-get($valuemap, $key), darker), -10px -10px 20px map-get(map-get($valuemap, $key), lighter), inset 0 0 100px #00000020;
                        // }
                        // &.colored-bump:active{
                        //     #{$key}: 10px 10px 20px map-get(map-get($valuemap, $key), darker), -10px -10px 20px map-get(map-get($valuemap, $key), lighter), inset 0 0 50px #00000020;
                        // }
                        // &.colored-bump:focus{
                        //     #{$key}: 10px 10px 20px map-get(map-get($valuemap, $key), darker), -10px -10px 20px map-get(map-get($valuemap, $key), lighter), inset 0 0 50px #00000020;
                        // }
                        &.button-push:active{
                            #{$key}: 10px 10px 20px  map-get(map-get($valuemap, $key), darker) inset, -10px -10px 20px map-get(map-get($valuemap, $key), lighter) inset;
                        } 
                        &:active{
                            #{$key}: 10px 10px 20px map-get(map-get($valuemap, $key), modd), -10px -10px 20px map-get(map-get($valuemap, $key), modl);
                        }
                        &.focus:focus{
                            outline: 0;
                            #{$key}: 10px 10px 20px map-get(map-get($valuemap, $key), modd), -10px -10px 20px map-get(map-get($valuemap, $key), modl);
                        }
                        &.button-bump:active{
                            #{$key}: 10px 10px 20px map-get(map-get($valuemap, $key), darker), -10px -10px 20px map-get(map-get($valuemap, $key), lighter), 10px 10px 20px map-get(map-get($valuemap, $key), darker) inset, -10px -10px 20px map-get(map-get($valuemap, $key), lighter) inset;
                        }
                    }
                }
            }
        }
    }
}
@mixin set_button_colored($map, $keys){
    input[type="button"]:not(:disabled),
    input[type="submit"]:not(:disabled),
    input[type="reset"]:not(:disabled),
    button:not(:disabled){
        @each $keymap, $valuemap in $map{
            &.colored-#{$keymap}{
                @each $key in $keys{
                    @if $key == box-shadow {
                        #{$key}: 10px 10px 20px map-get(map-get($valuemap, $key), darker), -10px -10px 20px map-get(map-get($valuemap, $key), lighter), inset 0 0 100px #00000020;
                        &:focus{
                            #{$key}: 10px 10px 20px map-get(map-get($valuemap, $key), darker), -10px -10px 20px map-get(map-get($valuemap, $key), lighter), inset 0 0 50px #00000020;
                        }
                    }
                    @else{
                        #{$key}: map-get($valuemap, $key);
                    }
                }
            }
            // .colored-#{$keymap}--inner{
            //     @each $key in $keys{
            //         // display: inherit;
            //         // position: absolute;
            //         padding: 1.4rem 1.4rem;
            //         // content: '';
            //         // margin: inherit;
            //         height: 100%;
            //         width: 100%;
            //         // border: inherit;
            //         border-radius: inherit;
            //         transform: translate(-50%, -50%);
            //         // @if $key == box-shadow {
            //         //         #{$key}: inset 0 0 100px #00000020;
            //         //         // &:focus{
            //         //         //     #{$key}: inset 0 0 50px #00000020;
            //         //         // }
            //         // }
            //         // @else{
            //         //         #{$key}: map-get($valuemap, $key);
            //         // }
            //         background: map-get($valuemap, background);
            //         // &:focus{
            //         //     background: inherit;
            //         // }
            //     }
            // }

        }
    }
}